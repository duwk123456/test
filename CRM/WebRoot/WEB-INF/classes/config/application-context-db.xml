<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 加载数据库配置信息文件 -->
	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
				<!-- <value>classpath:config/mail.properties</value> -->
				<value>classpath:config/project.properties</value>
			</list>
		</property>
	</bean>
	
	  <!-- 配置数据源 -->
    <bean id="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl">
            <value><![CDATA[jdbc:mysql://${jdbc.host}:${jdbc.port}/${jdbc.database}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true]]></value>
        </property>
        <property name="user"               value="${jdbc.userName}" />
        <property name="password"           value="${jdbc.password}" />
      	<!-- 连接池中保留的最小连接数  -->
		<property name="minPoolSize">
			<value>${jdbc.c3p0.min_size}</value>
		</property>
		<!-- 连接池中保留的最大连接数  -->
		<property name="maxPoolSize">
			<value>${jdbc.c3p0.max_size}</value>
		</property>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
		<property name="maxIdleTime">
			<value>${jdbc.c3p0.timeout}</value>
		</property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>${jdbc.c3p0.acquire_increment}</value>
		</property>
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements    
			属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。    
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0--> 
		<property name="maxStatements">
			<value>${jdbc.c3p0.max_statements}</value>
		</property>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
		<property name="idleConnectionTestPeriod">
			<value>${jdbc.c3p0.idle_connection_test_period}</value>
		</property>
    </bean>   
	
	
	
	
	

	
	<!-- 配置sql会话工厂类 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"> 
			<value>classpath:config/mybatis-config.xml</value>
		</property>
		<!-- 配置接口 xml的位置 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/xsd/portalmgr/*/dao/*.xml</value>
			</list>
		</property>
	</bean>
    
    
    <!--   扫描到dao层   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage"  value="com.xsd.portalmgr.*.dao"/>
      <property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory"/>
    </bean>


	<!-- 配置数据库事务管理类 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="baseTxService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="proxyTargetClass" value="true" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED</prop>
				<prop key="query*">PROPAGATION_REQUIRED</prop>
				<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="page*">PROPAGATION_REQUIRED</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="read*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

</beans>